version: 2.1

orbs:
  k8s: circleci/kubernetes@1.3.1
  retry: kimh/run-with-retry@1.0.0

executors:
  machine-medium:
    machine: true
    resource_class: medium
    working_directory: ~/repo
  machine-large:
    machine: true
    resource_class: large
    working_directory: ~/repo

commands:
  install_software:
    steps:
      - k8s/install
      - run:
          name: Install tools and deps
          command: |
            if [ ! -f ~/bin/kind ]; then
              curl -L https://github.com/kubernetes-sigs/kind/releases/download/v0.14.0/kind-linux-amd64 -o ~/bin/kind
              chmod +x ~/bin/kind
            fi

            curl -L https://github.com/syntasso/kratix/releases/download/v0.0.1/worker-resource-builder-v0.0.0-1-linux-amd64 -o ~/bin/worker-resource-builder
            chmod +x ~/bin/worker-resource-builder
      - run:
          name: Install Kratix
          command: |
            kind create cluster --name platform
            kubectl apply --filename https://raw.githubusercontent.com/syntasso/kratix/main/distribution/single-cluster/install-all-in-one.yaml
            sleep 5
            kubectl apply --filename https://raw.githubusercontent.com/syntasso/kratix/main/distribution/single-cluster/config-all-in-one.yaml
            sleep 5
      - attach_workspace:
          at: .

jobs:
  test-and-push:
    parameters:
      promise:
        type: string
    executor:
      name: machine-large
    steps:
      - install_software
      - checkout
      - run:
          working_directory: ~/repo/<< parameters.promise >>
          name: Validate no pending changes
          command: |
            ./internal/scripts/inject-wcr

            if ! git diff --exit-code .; then
              echo ""
              echo "Changes in the WCR were detected"
              echo "Injection of WCR via CI is not supported. Please commit and push them manually."
              exit 1
            fi
      - run:
          name: Install Promise
          working_directory: ~/repo/<< parameters.promise >>
          command: |
            kubectl apply --filename promise.yaml

            ./internal/scripts/docker build load
      - retry/run-with-retry:
          command: << parameters.promise >>/internal/scripts/test promise
          sleep: 3
          retry-count: 30
      - run:
          name: Apply resource-request
          working_directory: ~/repo/<< parameters.promise >>
          command: |
            kubectl apply --filename resource-request.yaml
      - retry/run-with-retry:
          command: << parameters.promise >>/internal/scripts/test resource-request
          sleep: 3
          retry-count: 30
      - when:
          condition:
            equal: [ main, << pipeline.git.branch >> ]
          steps:
            - run:
                name: GHCR Push
                working_directory: ~/repo/<< parameters.promise >>
                command: |
                  echo "$GITHUB_TOKEN" | docker login ghcr.io -u syntassodev --password-stdin
                  ./internal/scripts/docker push
            - run:
                name: Verify package is public
                working_directory: ~/repo/<< parameters.promise >>
                command: |
                  docker logout ghcr.io
                  ./internal/scripts/docker rmi pull

workflows:
  promises:
    jobs:
      - test-and-push:
          matrix:
            parameters:
              promise: [redis, jenkins]
