#!/usr/bin/env sh

set -euxo pipefail
#
# Read current values from the provided resource request
export name="$(yq eval '.metadata.name' /kratix/input/object.yaml)"

helm repo add loft-sh https://charts.loft.sh
helm repo update
helm template $name vcluster \
  --version 0.22.3 \
  --repo https://charts.loft.sh \
  --namespace $name \
  --repository-config='' > /kratix/output/vcluster.yaml

cat > /kratix/output/namespace.yaml <<EOF
apiVersion: v1
kind: Namespace
metadata:
  name: $name
EOF

sed "s/CLUSTERNAME/${name}/g" /tmp/transfer/flux-push.yaml > /kratix/output/flux-push.yaml

cat > /kratix/output/cluster.yaml <<EOF
apiVersion: platform.kratix.io/v1alpha1
kind: Destination
metadata:
  name: $name
  namespace: default
  labels:
    type: vcluster
    clusterName: $name
spec:
  path: $name
  stateStoreRef:
    kind: BucketStateStore
    name: default
EOF


# Bootstrapper creates a valid kubeconfig for Flux to push down to the vcluster
cat > /kratix/output/job.yaml <<EOF
apiVersion: batch/v1
kind: Job
metadata:
  name: bootstrapper
  namespace: $name
spec:
  template:
    spec:
      serviceAccount: bootstrapper
      containers:
      - name: bootstrapper
        image: ghcr.io/syntasso/kratix-marketplace/vcluster-configure-pipeline:v0.1.0
        command: ["sh",  "-c", "./bootstrapper"]
        env:
        - name: NAME
          value: $name
      restartPolicy: Never
  backoffLimit: 4
EOF


cat > /kratix/output/sa.yaml <<EOF
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bootstrapper
  namespace: $name
EOF

cat > /kratix/output/role.yaml <<EOF
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: $name-bootstrapper-admin
  namespace: $name
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - list
EOF

cat > /kratix/output/rolebinding.yaml <<EOF
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: $name-bootstrapper-admin
  namespace: $name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: $name-bootstrapper-admin
subjects:
- kind: ServiceAccount
  name: bootstrapper
  namespace: $name
EOF
