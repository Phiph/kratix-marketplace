#!/usr/bin/env ruby

require 'yaml'

puts "Checking for enviroment variables..."

# Load the existing deployment from the previous pipeline step
existingDeployment = YAML.load_file('/kratix/output/deployment.yaml')

# Get the user's input
resource_request = YAML.load_file('/kratix/input/object.yaml')
env = resource_request['spec']['env']

if env.nil? then
    puts "No Environment variables specified, skipping"
    exit 0
end

name = resource_request.dig('metadata', 'name')
namespace = resource_request.dig('metadata', 'namespace')



# Create a new ConfigMap
config_map = {
  'apiVersion' => 'v1',
  'kind' => 'ConfigMap',
  'metadata' => {
    'name' => "#{name}-config-map",
    'namespace' => namespace
  },
  'data' => {}
}

puts "Adding env vars to the config map"
# Add the environment variables to the ConfigMap
env.each do |item|
  config_map['data'][item[0]] = item[1]
end

puts "Mounting config map to existing deployment"
# Add the ConfigMap to the existing deployment
existingDeployment['spec']['template']['spec']['containers'].each do |container|
  container['envFrom'] = [
    {
      'configMapRef' => {
        'name' => "#{name}-config-map"  # The name of your ConfigMap
      }
    }
  ]
end



File.write('/kratix/output/configmap.yaml', config_map.to_yaml)
File.write('/kratix/output/deployment.yaml', existingDeployment.to_yaml)