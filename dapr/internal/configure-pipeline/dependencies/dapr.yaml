apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-injector
  namespace: dapr-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-operator
  namespace: dapr-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-placement
  namespace: dapr-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-scheduler
  namespace: dapr-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-sentry
  namespace: dapr-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-injector
  namespace: dapr-system
rules:
- apiGroups:
  - ""
  resourceNames:
  - dapr-trust-bundle
  resources:
  - secrets
  verbs:
  - get
- apiGroups:
  - dapr.io
  resources:
  - configurations
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-operator
  namespace: dapr-system
rules:
- apiGroups:
  - coordination.k8s.io
  resourceNames:
  - operator.dapr.io
  - webhooks.dapr.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - update
  - create
- apiGroups:
  - ""
  resourceNames:
  - operator.dapr.io
  - webhooks.dapr.io
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - update
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - configmaps
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-sentry
  namespace: dapr-system
rules:
- apiGroups:
  - ""
  resourceNames:
  - dapr-trust-bundle
  resources:
  - secrets
  verbs:
  - get
  - update
  - delete
- apiGroups:
  - ""
  resourceNames:
  - dapr-trust-bundle
  resources:
  - configmaps
  verbs:
  - get
  - update
  - watch
  - list
- apiGroups:
  - dapr.io
  resources:
  - configurations
  verbs:
  - list
  - get
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: secret-reader
  namespace: dapr-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-injector
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - dapr-sidecar-injector
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - patch
- apiGroups:
  - dapr.io
  resources:
  - components
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-operator-admin
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - deployments/finalizers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - apps
  resources:
  - statefulsets
  - statefulsets/finalizers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - delete
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - services/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - create
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - dapr.io
  resources:
  - components
  - configurations
  - subscriptions
  - resiliencies
  - httpendpoints
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-placement
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-scheduler
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-sentry
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - dapr.io
  resources:
  - configurations
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - get
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-injector
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dapr-injector
subjects:
- kind: ServiceAccount
  name: dapr-injector
  namespace: dapr-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-operator
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dapr-operator
subjects:
- kind: ServiceAccount
  name: dapr-operator
  namespace: dapr-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-secret-reader
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: secret-reader
subjects:
- kind: ServiceAccount
  name: default
  namespace: dapr-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-sentry
  namespace: dapr-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dapr-sentry
subjects:
- kind: ServiceAccount
  name: dapr-sentry
  namespace: dapr-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-injector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-injector
subjects:
- kind: ServiceAccount
  name: dapr-injector
  namespace: dapr-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-operator-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-operator-admin
subjects:
- kind: ServiceAccount
  name: dapr-operator
  namespace: dapr-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-placement
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-placement
subjects:
- kind: ServiceAccount
  name: dapr-placement
  namespace: dapr-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-scheduler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-scheduler
subjects:
- kind: ServiceAccount
  name: dapr-scheduler
  namespace: dapr-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-sentry
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dapr-sentry
subjects:
- kind: ServiceAccount
  name: dapr-sentry
  namespace: dapr-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: dapr-sentry
    app.kubernetes.io/component: sentry
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-trust-bundle
  namespace: dapr-system
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: dapr-sentry
    app.kubernetes.io/component: sentry
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-trust-bundle
  namespace: dapr-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/path: /
    prometheus.io/port: "9090"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-api
  namespace: dapr-system
spec:
  ports:
  - name: grpc
    port: 443
    protocol: TCP
    targetPort: 6500
  - name: legacy
    port: 80
    protocol: TCP
    targetPort: 6500
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: dapr-operator
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/path: /
    prometheus.io/port: "9090"
    prometheus.io/scrape: "true"
  labels:
    app: dapr-placement-server
    app.kubernetes.io/component: placement
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-placement-server
  namespace: dapr-system
spec:
  clusterIP: None
  ports:
  - name: api
    port: 50005
  - name: raft-node
    port: 8201
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  publishNotReadyAddresses: true
  selector:
    app: dapr-placement-server
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/path: /
    prometheus.io/port: "9090"
    prometheus.io/scrape: "true"
  labels:
    app: dapr-scheduler-server
    app.kubernetes.io/component: scheduler
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-scheduler-server
  namespace: dapr-system
spec:
  clusterIP: None
  ports:
  - name: api
    port: 50006
  - name: etcd-client
    port: 2379
  - name: etcd-httpclient
    port: 2330
  - name: etcd-peer
    port: 2380
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  publishNotReadyAddresses: true
  selector:
    app: dapr-scheduler-server
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/path: /
    prometheus.io/port: "9090"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/component: sentry
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-sentry
  namespace: dapr-system
spec:
  ports:
  - name: grpc
    port: 443
    protocol: TCP
    targetPort: 50001
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: dapr-sentry
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/path: /
    prometheus.io/port: "9090"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-sidecar-injector
  namespace: dapr-system
spec:
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  - name: metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: dapr-sidecar-injector
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-webhook
  namespace: dapr-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 19443
  selector:
    app: dapr-operator
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dapr-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-operator
  namespace: dapr-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dapr-operator
  template:
    metadata:
      annotations:
        dapr.io/control-plane: operator
        prometheus.io/path: /
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
      labels:
        app: dapr-operator
        app.kubernetes.io/component: operator
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: dapr
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.14.1
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --watch-interval
        - "0"
        - --max-pod-restarts-per-minute
        - "20"
        - --log-level
        - info
        - --trust-anchors-file
        - /var/run/secrets/dapr.io/tls/ca.crt
        - --enable-metrics
        - --metrics-port
        - "9090"
        command:
        - /operator
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ghcr.io/dapr/operator:1.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        name: dapr-operator
        ports:
        - containerPort: 6500
        - containerPort: 9090
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        resources: {}
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /var/run/secrets/dapr.io/tls
          name: dapr-trust-bundle
          readOnly: true
        - mountPath: /var/run/secrets/dapr.io/sentrytoken
          name: dapr-identity-token
          readOnly: true
        - mountPath: /tmp
          name: dapr-operator-tmp
      serviceAccountName: dapr-operator
      volumes:
      - emptyDir:
          medium: Memory
          sizeLimit: 2Mi
        name: dapr-operator-tmp
      - configMap:
          name: dapr-trust-bundle
        name: dapr-trust-bundle
      - name: dapr-identity-token
        projected:
          sources:
          - serviceAccountToken:
              audience: spiffe://cluster.local/ns/default/dapr-sentry
              expirationSeconds: 600
              path: token
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dapr-sentry
    app.kubernetes.io/component: sentry
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-sentry
  namespace: dapr-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dapr-sentry
  template:
    metadata:
      annotations:
        dapr.io/control-plane: sentry
        prometheus.io/path: /
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
      labels:
        app: dapr-sentry
        app.kubernetes.io/component: sentry
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: dapr
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.14.1
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --log-level
        - info
        - --enable-metrics
        - --metrics-port
        - "9090"
        - --trust-domain
        - cluster.local
        command:
        - /sentry
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ghcr.io/dapr/sentry:1.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        name: dapr-sentry
        ports:
        - containerPort: 50001
        - containerPort: 9090
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        resources: {}
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /var/run/secrets/dapr.io/credentials
          name: credentials
          readOnly: true
      serviceAccountName: dapr-sentry
      volumes:
      - name: credentials
        secret:
          secretName: dapr-trust-bundle
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dapr-sidecar-injector
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-sidecar-injector
  namespace: dapr-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dapr-sidecar-injector
  template:
    metadata:
      annotations:
        dapr.io/control-plane: injector
        prometheus.io/path: /
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
      labels:
        app: dapr-sidecar-injector
        app.kubernetes.io/component: sidecar-injector
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: dapr
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.14.1
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --log-level
        - info
        - --enable-metrics
        - --metrics-port
        - "9090"
        - --healthz-port
        - "8080"
        command:
        - /injector
        env:
        - name: DAPR_TRUST_ANCHORS_FILE
          value: /var/run/secrets/dapr.io/tls/ca.crt
        - name: DAPR_CONTROL_PLANE_TRUST_DOMAIN
          value: cluster.local
        - name: DAPR_SENTRY_ADDRESS
          value: dapr-sentry.default.svc.cluster.local:443
        - name: KUBE_CLUSTER_DOMAIN
          value: cluster.local
        - name: SIDECAR_IMAGE
          value: ghcr.io/dapr/daprd:1.14.1
        - name: SIDECAR_IMAGE_PULL_POLICY
          value: IfNotPresent
        - name: SIDECAR_RUN_AS_NON_ROOT
          value: "true"
        - name: ENABLE_K8S_DOWNWARD_APIS
          value: "false"
        - name: SIDECAR_DROP_ALL_CAPABILITIES
          value: "false"
        - name: SIDECAR_READ_ONLY_ROOT_FILESYSTEM
          value: "true"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: IGNORE_ENTRYPOINT_TOLERATIONS
          value: '[{\"effect\":\"NoSchedule\",\"key\":\"alibabacloud.com/eci\"},{\"effect\":\"NoSchedule\",\"key\":\"azure.com/aci\"},{\"effect\":\"NoSchedule\",\"key\":\"aws\"},{\"effect\":\"NoSchedule\",\"key\":\"huawei.com/cci\"}]'
        - name: ACTORS_ENABLED
          value: "true"
        - name: ACTORS_SERVICE_NAME
          value: placement
        - name: ACTORS_SERVICE_ADDRESS
          value: dapr-placement-server:50005
        image: ghcr.io/dapr/injector:1.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        name: dapr-sidecar-injector
        ports:
        - containerPort: 4000
          name: https
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        resources: {}
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /var/run/secrets/dapr.io/tls
          name: dapr-trust-bundle
          readOnly: true
        - mountPath: /var/run/secrets/dapr.io/sentrytoken
          name: dapr-identity-token
          readOnly: true
      serviceAccountName: dapr-injector
      volumes:
      - configMap:
          name: dapr-trust-bundle
        name: dapr-trust-bundle
      - name: dapr-identity-token
        projected:
          sources:
          - serviceAccountToken:
              audience: spiffe://cluster.local/ns/default/dapr-sentry
              expirationSeconds: 600
              path: token
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: dapr-placement-server
    app.kubernetes.io/component: placement
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-placement-server
  namespace: dapr-system
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: dapr-placement-server
  serviceName: dapr-placement-server
  template:
    metadata:
      annotations:
        dapr.io/control-plane: placement
        prometheus.io/path: /
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
      labels:
        app: dapr-placement-server
        app.kubernetes.io/component: placement
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: dapr
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.14.1
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --log-level
        - info
        - --enable-metrics
        - --replicationFactor
        - "100"
        - --max-api-level
        - "10"
        - --min-api-level
        - "0"
        - --metrics-port
        - "9090"
        - --tls-enabled
        - --trust-domain=cluster.local
        - --trust-anchors-file=/var/run/secrets/dapr.io/tls/ca.crt
        - --sentry-address=dapr-sentry.default.svc.cluster.local:443
        - --mode=kubernetes
        command:
        - /placement
        env:
        - name: PLACEMENT_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ghcr.io/dapr/placement:1.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 3
        name: dapr-placement-server
        ports:
        - containerPort: 50005
          name: api
        - containerPort: 8201
          name: raft-node
        - containerPort: 9090
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        resources: {}
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsUser: 0
        volumeMounts:
        - mountPath: /var/run/secrets/dapr.io/tls
          name: dapr-trust-bundle
          readOnly: true
        - mountPath: /var/run/secrets/dapr.io/sentrytoken
          name: dapr-identity-token
      serviceAccountName: dapr-placement
      volumes:
      - configMap:
          name: dapr-trust-bundle
        name: dapr-trust-bundle
      - name: dapr-identity-token
        projected:
          sources:
          - serviceAccountToken:
              audience: spiffe://cluster.local/ns/default/dapr-sentry
              expirationSeconds: 600
              path: token
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: dapr-scheduler-server
    app.kubernetes.io/component: scheduler
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-scheduler-server
  namespace: dapr-system
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: dapr-scheduler-server
  serviceName: dapr-scheduler-server
  template:
    metadata:
      annotations:
        dapr.io/control-plane: scheduler
        prometheus.io/path: /
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
      labels:
        app: dapr-scheduler-server
        app.kubernetes.io/component: scheduler
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: dapr
        app.kubernetes.io/part-of: dapr
        app.kubernetes.io/version: 1.14.1
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --listen-address=0.0.0.0
        - --id
        - $(SCHEDULER_ID)
        - --replica-count
        - "1"
        - --initial-cluster
        - dapr-scheduler-server-0=http://dapr-scheduler-server-0.dapr-scheduler-server.default.svc.cluster.local:2380
        - --etcd-client-ports
        - dapr-scheduler-server-0=2379
        - --etcd-client-http-ports
        - dapr-scheduler-server-0=2330
        - --log-level
        - info
        - --enable-metrics
        - --metrics-port
        - "9090"
        - --etcd-data-dir=/var/run/data/dapr-scheduler/default/$(SCHEDULER_ID)
        - --etcd-space-quota=2147483648
        - --etcd-compaction-mode=periodic
        - --etcd-compaction-retention=24h
        - --tls-enabled
        - --trust-domain=cluster.local
        - --trust-anchors-file=/var/run/secrets/dapr.io/tls/ca.crt
        - --sentry-address=dapr-sentry.default.svc.cluster.local:443
        - --mode=kubernetes
        command:
        - /scheduler
        env:
        - name: SCHEDULER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: ghcr.io/dapr/scheduler:1.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 3
        name: dapr-scheduler-server
        ports:
        - containerPort: 50006
          name: api
        - containerPort: 2379
          name: etcd-client
        - containerPort: 2330
          name: etcd-httpclient
        - containerPort: 2380
          name: etcd-peer
        - containerPort: 9090
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        resources: {}
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /var/run/data/dapr-scheduler/
          name: dapr-scheduler-data-dir
          readOnly: false
        - mountPath: /var/run/secrets/dapr.io/tls
          name: dapr-trust-bundle
          readOnly: true
        - mountPath: /var/run/secrets/dapr.io/sentrytoken
          name: dapr-identity-token
      securityContext:
        fsGroup: 65532
      serviceAccountName: dapr-scheduler
      volumes:
      - configMap:
          name: dapr-trust-bundle
        name: dapr-trust-bundle
      - name: dapr-identity-token
        projected:
          sources:
          - serviceAccountToken:
              audience: spiffe://cluster.local/ns/default/dapr-sentry
              expirationSeconds: 600
              path: token
  volumeClaimTemplates:
  - metadata:
      name: dapr-scheduler-data-dir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: null
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app: dapr-scheduler-server
    app.kubernetes.io/component: scheduler
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-scheduler-server-disruption-budget
  namespace: dapr-system
spec:
  maxUnavailable: 25%
  selector:
    matchLabels:
      app: dapr-scheduler-server
      app.kubernetes.io/component: scheduler
      app.kubernetes.io/managed-by: helm
      app.kubernetes.io/name: dapr
      app.kubernetes.io/part-of: dapr
      app.kubernetes.io/version: 1.14.1
---
apiVersion: dapr.io/v1alpha1
kind: Configuration
metadata:
  labels:
    app.kubernetes.io/component: config
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: daprsystem
  namespace: dapr-system
spec:
  mtls:
    allowedClockSkew: 15m
    controlPlaneTrustDomain: cluster.local
    enabled: true
    sentryAddress: dapr-sentry.default.svc.cluster.local:443
    workloadCertTTL: 24h
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app: dapr-sidecar-injector
    app.kubernetes.io/component: sidecar-injector
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/name: dapr
    app.kubernetes.io/part-of: dapr
    app.kubernetes.io/version: 1.14.1
  name: dapr-sidecar-injector
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: dapr-sidecar-injector
      namespace: dapr-system
      path: /mutate
  failurePolicy: Ignore
  name: sidecar-injector.dapr.io
  reinvocationPolicy: IfNeeded
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
